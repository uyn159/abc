# image: docker:24.0.7

# stages:
#   - build

# variables:
#   IMAGE_TAG_BUILDER: $CI_REGISTRY_IMAGE/builder:latest
#   IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
#   DOCKER_BUILDKIT: '1'

# build:
#   stage: build
#   before_script:
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
#     - mkdir -p .next
#   script:
#     - docker pull $IMAGE_TAG_BUILDER || echo "Old image not exists, build from scratch"
#     - docker image inspect "$IMAGE_TAG_BUILDER" &> /dev/null && container_id=$(docker create "$IMAGE_TAG_BUILDER") && docker cp "$container_id:/app/.next/cache" .next/ && docker rm "$container_id" || echo "Image $IMAGE_TAG_BUILDER does not exist. Doing nothing."
#     - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $IMAGE_TAG_BUILDER -t $IMAGE_TAG_BUILDER --target=builder .
#     - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $IMAGE_TAG_BUILDER -t $IMAGE_TAG .
#     - docker push $IMAGE_TAG
#     - docker push $IMAGE_TAG_BUILDER
stages:
  - build
  - run
build:
    stage: build
    tags:
      - mylab
    before_script:
      - docker login -u $USER_NAME -p $PASSWORD
    script:
        - docker pull $IMAGE_BUILDER || echo "done"
        - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $IMAGE_BUILDER -t $IMAGE_BUILDER .
        - docker push $IMAGE_BUILDER
    only:
        - main
run:
  stage: run
  tags:
    - mylab
  before_script:
    - docker stop $IMAGE_BUILDER || true && docker rm $IMAGE_BUILDER || true
  script:
    - docker run -d -p 3000:3000 --name=test --restart always $IMAGE_BUILDER


